*** Selezionare i dati da una tabella in SQL ***
link: https://www.w3schools.com/sql/sql_ref_select.asp

1) Per selezionare i dati usiamo il comando SELECT (per convenzione i comandi SQL si scrivono in MAIUSCOLO). 
SELECT (in questo campo mettiamo il nome delle colonne che voglio visualizzare divise da una virgola(,). Se le voglio visualizzare tutte metto *)
FROM (in questo campo inserisco il nome della tabella da dove estrarre le informazioni)
->In Django ORM il comando SELECT * FROM <tabella> è il comando <CLASSE DELLA TABELLA>.object.all()

2)Selezionare i dati con una condizione. Usiamo la key WHERE (link: https://www.w3schools.com/sql/sql_ref_where.asp)
SELECT <campi>
FROM <Tabella>
WHERE <condizione> and/or <condizione
->In Django ORM il comando SELECT * FROM <tabella> WHERE <condizione> è il comando <CLASSE DELLA TABELLA>.object.all().filter()

*** Filtri in SQL ***
1) '=' Serve a trovare l'occorrenza uguale
2) 'like' serve a trovare l'inzio, il contenuto o la fine di una stringa in un campo. 
    Il  carattere che usa like per determinare la ricerca è %. (link: https://www.w3schools.com/sql/sql_like.asp)
3) 'ORDER BY' serve a restituire i dati ordinato in base alla colonna indicata. 




*** Modificare campi in una tabella SQL ***
link: https://www.w3schools.com/sql/sql_ref_update.asp
Il comando UPDATE serve a modificare i valori all'interno delle tabelle
UPDATE <nome_tabella>
SET colonna2=valore, colonna2 = valore....
WHERE condizione (IMPORTANTE MAI DIMENTICARE LA CONDIZIONE)



*** Inserire nuove righe ad una tabella ***
link: https://www.w3schools.com/sql/sql_ref_insert_into.asp
Per inserire nuove informazioni ad una tabella, quindi creare una nuova riga della tabella si usa il comando INSERT
INSERT INTO <nome_tabella> (Campi della tabella) ->Sono opzionali se ricordiamo l'ordine dei campi e inseriamo tutti i valori
VALUES (val1,val2,val3...)


*** Come eliminare una riga da una colonna ***
link: https://www.w3schools.com/sql/sql_ref_delete.asp
DELETE FROM <nome_tabella>
WHERE <condizione> (IMPORTANTE MAI DIMENTICARE LA CONDIZIONE)


*** Creare una nuova tabella nel BD ***
In Django questa operazione si fa creando una nuova classe nel file models.py e indicando i campi.
In SQL il comando è CREATE <nome_tabella>{ vari campi}

CREATE TABLE libri (
	"id" INTEGER,
	"titolo" varchar(150) NOT NULL,
	"descrizione" varchar(250),
	"anno_pubblicazione" date,
	PRIMARY KEY ("id" AUTOINCREMENT)
);

in Django:
(ID non necessario perchè generato da Django)

class libri(models.Model):
    titolo = models.CharField(max_length = 150)
    descrizione = models.CharField(max_length = 250, default = None)
    anno_pubblicazione = models.DATE()


*** Cancellare una tabella con tutto il suo contenuto ***
DROP TABLE <nome_tabella>

*** Per eliminare una colonna da una tabella e il relativo contenuto ***
ALTER TABLE <nome_tabella>
DROP COLUMS <nome_tabella>


*** Contare numero di occorrenze nelle query *** 
link: https://www.w3schools.com/sql/sql_count.asp
Si usa il COUNT. Per conoscere quante volte nella colonna compare un determinato elemento basta racchiudere l'elemento nel COUNT
SELECT COUNT(marca)
FROM smartphone
WHERE marca = 'Samsung'


*** Sommare gli elementi di una colonna ***
link: https://www.w3schools.com/sql/sql_sum.asp
SUM ritorna il risultato della somma degli elementi numerici.
SELECT sum(prezzo)
FROM smartphone
WHERE marca = 'Apple'

AVG Serve per trovare il valore medio
AS serve a dare un nuovo nome alla colonna


*********************************************+
*** Selezionare dati su più tabelle ***
*********************************************+
Le JOIN.
link: https://www.w3schools.com/sql/sql_join.asp

SELECT <campi_tabella1> campi_tabella2,
FROM tabella_principale
INNER JOIN tabella2 ON tabella_principale.id_tabella2 = tabella2.id


/* Visualizzare solo le marche ripetute una volta */
SELECT DISTINCT marca
FROM smartphone

Trovare il prezzo minore con MIN()
SELECT min(prezzo), marca, modello
FROM smartphone

Trovare il prezzo maggiore con MAX()
SELECT max(prezzo), marca, modello
FROM smartphone

Trovare un range di prezzo
SELECT marca, modello, prezzo
FROM smartphone
WHERE prezzo BETWEEN 650 AND  900

Solo modelli compresi in una lista
SELECT marca, modello, prezzo
FROM smartphone
WHERE modello IN ('S22 Ultra', 'IPhone 15')

*** Raggruppare per caratteristica ***
GROUP BY 
/*Contare quanti cellulari ci sono per marca*/
SELECT marca, count(marca)
FROM smartphone
GROUP BY marca

NEGAZIONE DI UNA CONDIZIONE CON NOT
SELECT *
FROM smartphone
WHERE NOT marca = 'Apple'